/*!
  This style sheet was generated from a SASS stylesheet. Don't edit this
  stylesheet directly, edit and compile the SASS instead.

  Try something like this:

  sass --watch resources/sass:resources/css
*/


/* ==========================================================================
   Namespaces
   ========================================================================== */

@use 'sass:map';

/* ==========================================================================
   Imports
   ========================================================================== */

@import "_variables.scss";
@import "_fonts.scss";
@import "_mixins.scss";
@import "_toggle.scss";
@import "_breadcrumb.scss";
@import "../lib/css-hamburgers/_sass/hamburgers/hamburgers.scss";




/* ==========================================================================
   Main Structure
   ========================================================================== */

html {
    position: relative;
    min-height: 100%;
    font-size: 16px;
}

body{
    font-family: "EB Garamond";
    display:grid;
    grid-template-areas:
                        "nav"
                        "main"
                        "footer";
    min-height:100vh;
    color: $gpi-black;
    font-size:18px;
    overflow-x:hidden;
    position:static;
}


body:before{
    content:"";
    display:block;
    position:fixed;
    top:0;
    height:100vh;
    width:100vw;
    z-index:0;
    background-color:transparent;
    transition:background-color 0.2s ease-in-out;
}


/* Main nav menu
   ========================================================================== */

nav.navbar{
    grid-area: nav;
    position:fixed;
    height:$nav-height;
    font-family: "Roboto";
    font-weight:300;
    font-size: map.get($typescale, 5);
    background: $gpi-grey;
    display:flex;
    justify-content:center;
    ul.nav > li{
        text-align:center;
        width:8rem;
    }
}

nav .hamburger{
    display:none;
}

nav.navbar::before,
nav.navbar::after{
    content:unset;
}

nav.navbar .logo{
    padding: 0 2rem;
    font-family: "EB Garamond";
    font-size: map.get($typescale, 2);
    font-weight: bold;
    margin-top: -0.31rem; 
}

nav.navbar ul{
    display:flex;
    list-style:none;
    flex: 0 1 60rem;
    height:100%;
    justify-content:space-between;
}

nav.navbar li{
    display:flex;
    flex-direction:row;
    flex-wrap:wrap;
    width:100%;
    border-bottom:.2rem solid transparent;
    transition: border-bottom-color 0.25s ease-in-out;
    &:not(.logo):hover{
        border-bottom-color: $bc;
        transition: border-bottom-color 0.25s ease-in-out;
    }
 
}


nav.navbar a{
    color:inherit;
    width:100%;
    display:block;
    align-self:center;
    text-align:center;
    text-decoration:none;

    &:hover,:active,:visited{
        text-decoration:none;
    }


}


/*
 * Fixes the scroll margin to so that
 * they appear about half way down the page;
 * an alternative, if the anchors are meant to
 * be at the top of the page (but still visible
 * after the fixed header) would be to use the 
 * $nav-height variable instead.
 * 
 */
:not(aside) :target{
     scroll-margin-top: 25vh;

}


/* Main block
   ========================================================================== */
main{
    grid-area: main;
    margin-top: $nav-height;
    position:relative;
    min-height:100vh;
    display:flex;
    flex:0 1 60rem;
    align-items:baseline;
    
    /* Mains with poem containers should be flexed */
    .poem-container{
        display:flex;
    }
  
}

.container{
    display:flex;
    flex-direction:row;
    flex-wrap:wrap;
    flex: 0 1 60rem;
    margin:0 auto;
    padding-left: $poem-left-margin;
    align-items: baseline;
    margin-bottom:5rem;
}


/* 
 * Remove borders from page headers in object titles
 */
.object-title .page-header{
   border-bottom:none;
}

.page-header{
    width:100%;
}



/* Aside menu (only used in poems)
   ========================================================================== */

aside{
    flex: 0 0 15rem;
    background: $gpi-grey;
    position:sticky;
    overflow-y:auto;
    /* 
     * Order is important here, since the aside comes
     * after the main poem block
     * 
     */
    order:0;
    scroll-behavior: smooth;
    
    /* Height should be the entire page, except
     * for the navigation height */
    height:calc(100vh - #{$nav-height});
    padding: map.get($typescale, 10) 0;
    
    /* And the aside should start at the bottom
     * of the nav
     *  */
    top: $nav-height;
    margin-right: map.get($typescale, 1);
    transition: transform 0.5s ease;
    
    /* All roboto font */
    font-family: "Roboto";
    
    /* Aside headings headings are lighter */
    h1, h2, h3, h4, h5, h6{
        font-weight: 300;
    }
    
    h4{
        font-size: map.get($typescale, 6);
    }
    
    .aside-heading{
        display:flex;
        justify-content: space-around;
    }
    .aside-heading, h2, h3{
        font-size: map.get($typescale, 5);
    }

}



/* Footer
   ========================================================================== */


footer.footer{
    grid-area:footer;
    max-height:20rem;
    background: $gpi-black;
    z-index:50;
    display:flex;
    flex:0 1 60rem;
    font-family:"Roboto";
    list-style:none;
    
    a {
        color: white;
    }

    .container{
        margin-top:map.get($typescale, 3);
        justify-content:space-between;
        margin-bottom:map.get($typescale, 5);
        align-items: flex-start;
    }

    ul{
        list-style:none;
        columns: 2;
        margin-left:0;
        padding-left:0;
        font-size: map.get($typescale, 5);
    }
    li{
        margin-left:0;
        padding-left:0;
        margin-bottom: 1rem;
    }
    
    img{
        
        max-width:100%;
        height:auto;
        &.dhilLogo{
            max-width:75%;
        }
    }
}

#footer_links{
    margin-right:auto;
    max-width:30%;
}

#footer_imgs{
    max-width:50%;
}


section{
    width:100%;
    margin-top: map.get($typescale, 6);
}

/* Headings
   ========================================================================== */

/* Quick SASS formula for creating heading scale */
@for $i from 1 to 6{
    h#{$i}{
        font-size: map.get($typescale, $i);
    }
}


h1{
    margin-bottom: map.get($typescale, 1);
    .poem &{
       margin-right:map.get($typescale, 1);
    }
  
}

/* Bootstrap overrides
   ========================================================================== */


.row{
    width:100%;
    min-height: 0;
}

#content nav{
    width:100%;
}

.breadcrumb{
    
    background-color:white;
}

.page-header{
    margin-bottom:0;
    margin-top: map.get($typescale, 3);
    padding-bottom:0;
}



/* ==========================================================================
   Objects
   ========================================================================== */


.object{
    .record-link, .references, h1{
        display:none;
     }
    
}

aside .object{
    
    h1{
        display:block;
        font-size: map.get($typescale, 5);
        margin-bottom:map.get($typescale, 10);
        max-width:50%;
        &.long{
            font-size:map.get($typescale, 5) * 0.95;
        }
    }
    
    h2 {
        font-size:map.get($typescale, 6);
    }
}

/* Object heading in poem
   ========================================================================== */
   
.object-header{
    display:flex;
    flex-wrap:wrap;
    justify-content:space-between;
    align-items:baseline;
    margin-bottom: map.get($typescale, 8);
}


.toggles{
    display:none;
    button{
            top: -1rem;
    }
}



.js aside .toggles{
    display:block;
}

.objectCloser{
    display:none;
}



/* Object page
   ========================================================================== */

ul[data-template='app:object-usage']{
    list-style:none;
     a{
        color: $gpi-black;
        background: $bc;
        pointer-events:none;
        &.linenum{
            background:none;
            margin-left:-1 * map.get($typescale, 6);
            margin-right:map.get($typescale, 6);
            opacity: 0.8;
        }
    }
    li{
        margin: map.get($typescale, 9) 0;
        &:after{
            content:"...";
            padding-left:.2rem;
            opacity: 0.8;
            display:inline;
        }
    }
    
    
}



/* ==========================================================================
   Poem
   ========================================================================== */

.poem-container{
    margin-right:1rem;

}

/** Main poem bit */

#poem {
    flex: 0 1 $poem-width;
    order:1;
    
    /* This is the bit the does the poem
     * transition when the aside menu closes */
    transition: transform $shift-left-time ease;
    transform: translateX(0);
    margin-bottom: 5 * map.get($typescale, 1);
    margin-top: map.get($typescale, 4);
    margin-left: $poem-left-margin;
    
    /* Specific poem styles */
    .poem{
        /* Special link styles for 
         * gradient/rising link references */
        a{
            text-decoration:none;
            color: inherit;
            border-bottom: 0.1rem solid $bc;
            
            /* Create a linear gradient that is 
             * transparent  */
            background: linear-gradient(
                        0deg, 
                        $bc 0%,
                        $bc $initHeight * 1%,
                        $transparent $initHeight * 1%,
                        $transparent 100%);
                &:hover, &:visited, &:active{
                    color:inherit;
                    text-decoration:none;  
                }
                
                /* But when it's selected or clicked (controlled
                 * by gpi.js), make the gradient animate from
                 * 0 to 100%. See _mixins.css for the linear gradient
                 * animation
                 *  */
                &.selected, &.clicked{
                     background: linear-gradient(
                                 0deg,
                                 $bc 0%,
                                 $bc 100%);
                     animation: background-up $backgroundTime linear;
               }
              &.deselected{
                    animation: background-down $backgroundTime linear;  
              }
    }
    
    /* Epigraphs */
    blockquote {
        font-size: 16px;
        margin: map.get($typescale, 4) map.get($typescale, 1);
        max-width:25rem;
        p{
            margin:0;
        }
        cite{
            margin-left: map.get($typescale, 1);
            display:block;
            font-style:italic;
        }
        footer {
            font-size: inherit;
        }
        border:none;
    }
    
    /* Stanzas */
    ol {
        list-style-type: none;
        padding-left: 0;
        & + ol{
            margin-top: map.get($typescale, 5);
        }
    }

    li {
        margin-left:0;
        /* Hanging indent for small screen display
         * or very long lines */
        padding-left:1.5rem;
        text-indent:-1.5rem;
        & + li{
           margin-top: map.get($typescale, 13);
        }
        &:target .linenum{
            color: $teal;
            font-weight:bold; 
       }
    }

    .linenum {
        color: rgba($gpi-black, 0.5);
        padding-right: $lc_offset;
        text-align: right;
        display: inline-block;
        background:none;
        border-bottom:none;
        &:hover{
            color: $teal!important;
            transition: color 0.2s ease-in-out;
        }
    }
        
  }  
}


/* Poem aside
   ========================================================================== */

aside button.hamburger{
    display:none;
}

.js aside button.hamburger{
    display:block;
    margin-left: 10px;
}

/* 
 * When the aside is hidden, then move
 * the poem over $shift-left-width
 * and make the margin right the same as the amount it has shifted.
 * This basically makes it so that the poem itself is the same width
 * and the same margin as it was when the aside wasn't hidden.
 * 
 */
.aside-hidden #poem{
    transform: translateX($shift-left-width);
    margin-right: $shift-left-width;
}

/* 
 * Make the aside a bit translucent when it's hidden
 */
aside > div,
aside > .aside-heading > h2{
    opacity: 1;
    transition: opacity $shift-left-time ease;
}

/* 
 * If the aside isn't expanded, move it over a set amount
 * and make the overflow hidden.
 */
aside[aria-expanded='false']{
    transform: translateX($shift-left-width);
    overflow-y:hidden;
}


aside[aria-expanded='false'] > div:not(.aside-heading),
aside[aria-expanded='false'] > .aside-heading > h2{
    opacity:0.1;
}




aside > div {
    padding: map.get($typescale, 8);
    &:not(:first-of-type){
        border-top: map.get($typescale, 16) solid rgba($gpi-black, 0.4);
    }
}

aside .object{
    font-size: map.get($typescale, 6);
    .references, .record-link{
        display:block;
    }
    p{
        font-weight: 300;
        margin-top: map.get($typescale, 6);
    }
}



/* ==========================================================================
   Basic Pages
   ========================================================================== */

table.poem-index td:first-of-type{
    
    max-width: 20rem;
    
}


/* Pagination nav
   ========================================================================== */

ul.pagination{
    font-family: "Roboto";
    font-size:map.get($typescale, 7);
}


/* Transformation errors
   ========================================================================== */
.tx-error {
    background-color: $error_bg;
    outline: $error_outline;
    display: inline-block;
    padding: $error_padding;

    .node-name {
        font-weight: bold;
        display: inline-block;
        padding: $error_padding;
    }
}


/* Search inputs
   ========================================================================== */
   
input[type='text']{
    font-size: map.get($typescale, 5);
    
}
   

/* Search results
   ========================================================================== */

span.hi {
    font-weight: bold;
    color: darkred;
}



span.target {
    color: $gender_u_fg;
    cursor: pointer;
}

.referenced {
    font-weight: bolder;
}



p.signed {
    margin-left: 4em;
}

.searchHeader{
    border-bottom:none;
}
.searchResults{
    margin-top: map.get($typescale, 2);
}


/* Born-digital pages
   ========================================================================== */

section p{
    line-height: 1.6;
    margin-right:5rem;
}

/* ==========================================================================
   Media queries
   ========================================================================== */





/*  < 769
   ========================================================================== */
@media (max-width: 768px){
    
    /**
     * Create a modal using the pseudo on the body;
     * it has to be set at the very beginning to provide
     * nice transition effect
     */
    body.gpi-modal:before{
        z-index:100;
        background-color:rgba($gpi-grey,0.9);
        backdrop-filter: blur(4px);
        transition:background-color 0.2s ease-in-out,
                   backdrop-filter 0.2s ease-in-out;
    }
    

    #aside{
        /* Move the aside all the way over */
        transform: translateX(-15rem);
        display:flex;
        /* No longer sticky */
        position:fixed;
        height:120vh;
        /* And highest z */
        z-index:9000;
        top: -1 * $nav-height;
        transition:background-color 0.2s ease-in-out;
    }

    #poem{
        transform: translateX(0)!important;
        margin-right:1rem!important;
        transition:none!important;
        .poem{
            line-height:1.6;
             transition:none!important;
            margin-left:map.get($typescale, 7);
        }
    }
    

    .poem-index {
        td:nth-of-type(n+3),
        th:nth-of-type(n+3){
        display:none;
    }
}

    /* Force max opacity, even if it was closed
     * beforehand */
    #aside *{
        opacity: 1!important;
    }
    
    /* Hide the aside */
    #aside > *{
        display:none;
    }
    
    #aside.gpi-modal{
        transform:translateX(0);
        min-width:100vw;
        background-color: rgba($gpi-black, 0.3);
        transition:background-color 0.2s ease-in-out;
        align-content:center;
        justify-content:center;
        transition:none;
    }

    
    /* 
     * Create the object modal in mobile view
     * 
     */
    #aside.gpi-modal .object.active{
        display:block;
        border-top:none;
        min-width:20rem;
        max-width:35rem;
        align-self:center;
        justify-self:center;
        position:relative;
        top:-2rem;
        padding:map.get($typescale, 6) map.get($typescale,5);
        background-color: white;
        border-radius:.1rem;
        box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
    }
    
    .refToggle{
        display:none!important;
    }
    
    /* Show the object closer */
    .objectCloser{
        display:block;
        background:none;
        border:none;
    }
    
    /* On hover, change the stroke colour (it's an
     * svg) */
    .objectCloser:hover  *{
        stroke: $bc;
    }
    
    /* Center the poem */
    .poem-container{
        margin: 0 auto;
        justify-content:center;
    }

    main > section{
       margin:0 1rem;
    }
   
    section p{
       margin-right:0;
    }


    /* 
     * The mobile navbar is a bit trickier;
     * what we do here is:
     * 
     * 1. Hide all of it, except the logo
     * 2. Move the logo (using the order property)
     *    to the top of the list
     * 3. Only show the first bit of the list
     * 4. But when the hamburger menu actives the nav,
     *    show the rest of the list and trigger the body
     *    modal.
     */
    nav.navbar{
        align-items:center;
        justify-content:space-between;
        overflow-y:visible;
        ul{
            flex: 0 0 8rem;
            justify-content:flex-end;
            flex-direction:row;
            flex-wrap:wrap;
            margin-top:.5rem;
            height:100%;
            margin-right:1.25rem;
         }
         &[aria-open='true']{
            ul > li:not(.logo){
                transform: translateX(0);
                transition: opacity 0.35s ease-in-out;
                opacity:1;
             }
        } 
        ul > li{
           &.logo {
                justify-content:flex-end;
                margin-right:-.25rem;
            }
           &:not(.logo){
                order:1;
                position:relative;
                transform: translateX(20rem);
                background: $gpi-grey;
                width:8rem;
                height:4rem;
                opacity:0;
            }
        }
   
    .hamburger{
        display:block;
        margin-right:3rem;
        align-self:flex-start;
        margin-top:-.2rem;
        } 
    }
}
//15 seems to be about the right param
@include animateBorderBottom(15)