/*!
  This style sheet was generated from a SASS stylesheet. Don't edit this
  stylesheet directly, edit and compile the SASS instead.

  Try something like this:

  sass --watch resources/sass:resources/css
*/
/* ==========================================================================
   Namespaces
   ========================================================================== */
/* ==========================================================================
   Imports
   ========================================================================== */
/* Nav bar stuff */
/* Major third type scale */
/* Special stuff for hamburger thing */
/* Only include a couple burgers */
@font-face {
  font-family: "EB Garamond";
  font-style: normal;
  font-weight: 400;
  src: url("../lib/ebgaramond-googlefont/EBGaramond-Regular.ttf") format("truetype");
}
/* roboto-100 - latin */
@font-face {
  font-family: "Roboto";
  font-style: normal;
  font-weight: 100;
  src: local("Roboto Thin"), local("Roboto-Thin"), url("../lib/roboto-googlefont/Roboto-Thin.ttf") format("truetype");
}
/* roboto-100italic - latin */
@font-face {
  font-family: "Roboto";
  font-style: italic;
  font-weight: 100;
  src: local("Roboto Thin Italic"), local("Roboto-ThinItalic"), url("../lib/roboto-googlefont/Roboto-ThinItalic.ttf") format("truetype");
}
/* roboto-300 - latin */
@font-face {
  font-family: "Roboto";
  font-style: normal;
  font-weight: 300;
  src: local("Roboto Light"), local("Roboto-Light"), url("../lib/roboto-googlefont/Roboto-Light.ttf") format("truetype");
}
/* roboto-300italic - latin */
@font-face {
  font-family: "Roboto";
  font-style: italic;
  font-weight: 300;
  src: local("Roboto Light Italic"), local("Roboto-LightItalic"), url("../lib/roboto-googlefont/Roboto-LightItalic.ttf") format("truetype");
}
/* roboto-regular - latin */
@font-face {
  font-family: "Roboto";
  font-style: normal;
  font-weight: 400;
  src: local("Roboto"), local("Roboto-Regular"), url("../lib/roboto-googlefont/Roboto-Regular.ttf") format("truetype");
}
/* roboto-italic - latin */
@font-face {
  font-family: "Roboto";
  font-style: italic;
  font-weight: 400;
  src: local("Roboto Italic"), local("Roboto-Italic"), url("../lib/roboto-googlefont/Roboto-Italic.ttf") format("truetype");
}
/* roboto-500 - latin */
@font-face {
  font-family: "Roboto";
  font-style: normal;
  font-weight: 500;
  src: local("Roboto Medium"), local("Roboto-Medium"), url("../lib/roboto-googlefont/Roboto-Medium.ttf") format("truetype");
}
/* roboto-500italic - latin */
@font-face {
  font-family: "Roboto";
  font-style: italic;
  font-weight: 500;
  src: local("Roboto Medium Italic"), local("Roboto-MediumItalic"), url("../lib/roboto-googlefont/Roboto-MediumItalic.ttf") format("truetype");
}
/* roboto-700 - latin */
@font-face {
  font-family: "Roboto";
  font-style: normal;
  font-weight: 700;
  src: local("Roboto Bold"), local("Roboto-Bold"), url("../lib/roboto-googlefont/Roboto-Bold.ttf") format("truetype");
}
/* roboto-700italic - latin */
@font-face {
  font-family: "Roboto";
  font-style: italic;
  font-weight: 700;
  src: local("Roboto Bold Italic"), local("Roboto-BoldItalic"), url("../lib/roboto-googlefont/Roboto-BoldItalic.ttf") format("truetype");
}
/* roboto-900 - latin */
@font-face {
  font-family: "Roboto";
  font-style: normal;
  font-weight: 900;
  src: local("Roboto Black"), local("Roboto-Black"), url("../lib/roboto-googlefont/Roboto-Black.ttf") format("truetype");
}
/* roboto-900italic - latin */
@font-face {
  font-family: "Roboto";
  font-style: italic;
  font-weight: 900;
  src: local("Roboto Black Italic"), local("Roboto-BlackItalic"), url("../lib/roboto-googlefont/Roboto-BlackItalic.ttf") format("truetype");
}
/* 
 * This toggle library comes from Adrian Roselli work
 * as outlined here: https://adrianroselli.com/2019/08/under-engineered-toggles-too.html.
 * 
 * License:
 * 
 * Copyright (c) 2020 by Adrian Roselli (https://codepen.io/aardrian/pen/JgLGPB)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

 */
.toggles [aria-pressed] {
  display: block;
  box-sizing: border-box;
  border: none;
  color: inherit;
  background: none;
  font: inherit;
  line-height: inherit;
  text-align: left;
  padding: 0.4em 0 0.4em 4em;
  position: relative;
}

.toggles [aria-pressed]:hover,
.toggles [aria-pressed]:focus {
  outline: none;
}

.toggles [aria-pressed]:focus::after,
.toggles [aria-pressed]:hover::after {
  background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='50' cy='50' r='50' fill='rgba(0,0,0,.25)'/%3E%3C/svg%3E");
  background-size: 30%;
  background-repeat: no-repeat;
  background-position: center center;
}

.toggles [aria-pressed]::before,
.toggles [aria-pressed]::after {
  content: "";
  position: absolute;
  height: 1.5em;
  transition: all 0.25s ease;
}

.toggles [aria-pressed]::before {
  left: 0;
  top: 0.25rem;
  width: 3em;
  border: 0.2em solid #767676;
  background: #767676;
  border-radius: 1.1em;
}

.toggles [aria-pressed]::after {
  left: 0;
  top: 0.25rem;
  background-color: #fff;
  background-position: center center;
  border-radius: 50%;
  width: 1.5em;
  border: 0.15em solid #767676;
}

.toggles [aria-pressed=true]::after {
  left: 1.6em;
  border-color: #008080;
}

.toggles [aria-pressed=true]::before {
  background-color: #008080;
  border-color: #008080;
}

.breadcrumbs, .breadcrumbs2 {
  list-style: none;
  overflow: hidden;
  font-family: "Roboto";
  font-weight: 300;
  padding: 0;
  box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.05);
  display: flex;
  font-size: 0.8rem;
  width: -webkit-max-content;
  width: -moz-max-content;
  width: max-content;
  margin-top: 1.953rem;
}
#poem .breadcrumbs, #poem .breadcrumbs2 {
  margin-top: 0;
  margin-bottom: 1.953rem;
}

.breadcrumbs li > * {
  color: black;
  text-decoration: none;
  position: relative;
  display: block;
  padding: 0.5em 0 0.5em 4em;
}

/*
* Now create the various triangles
* that will overlap; this is the
* common stuff between the two
* triangles
*/
.breadcrumbs li > *:before,
.breadcrumbs li > *:after {
  content: " ";
  display: block;
  width: 0;
  height: 0;
  border-top: 50px solid transparent;
  border-bottom: 50px solid transparent;
  position: absolute;
  top: 50%;
  margin-top: -50px;
  left: 100%;
  border-left-width: 30px;
  border-left-style: solid;
}

.breadcrumbs li:not(:last-child) > *:before {
  /*This should be the colour
  you want the arrow*/
  border-left-color: #E7E7E7;
  /*The margin left here dictates the width of the arrow*/
  margin-left: 3px;
  /*And make sure the zindex is 1*/
  z-index: 1;
}

.breadcrumbs li > *:after {
  /*BORDER LEFT should be the
  same as the background colour*/
  border-left-color: white;
  /*Z index should be 2 to overlap*/
  z-index: 2;
}

/*Now small, project specific 
paddings etc*/
.breadcrumbs li:first-child > * {
  padding-left: 1rem;
}

.breadcrumbs li > *,
.breadcrumbs li > *:after,
.breadcrumbs li > *:before {
  transition: all 0.2s ease-in-out;
}

.breadcrumbs li:last-child {
  background: #e2efe8;
}

.breadcrumbs li:not(:last-child) > *:hover {
  background: #efefef;
}
.breadcrumbs li:not(:last-child) > *:hover:after, .breadcrumbs li:not(:last-child) > *:hover:before {
  border-left-color: #efefef;
}

.current {
  margin-right: 1rem;
  text-overflow: ellipsis;
  max-width: 25ch;
  white-space: nowrap;
  overflow-x: hidden;
  font-style: italic;
}
li > .current {
  color: rgba(19, 21, 22, 0.8);
}

.breadcrumbs li:last-child > *:after,
.breadcrumbs li:last-child > *:before {
  content: unset;
}

/* Media query to reset the size of things */
@media (max-width: 780px) {
  .current {
    max-width: 15ch;
  }
}
/*!
 * Hamburgers
 * @description Tasty CSS-animated hamburgers
 * @author Jonathan Suh @jonsuh
 * @site https://jonsuh.com/hamburgers
 * @link https://github.com/jonsuh/hamburgers
 */
.hamburger {
  padding: 15px 15px;
  display: inline-block;
  cursor: pointer;
  transition-property: opacity, filter;
  transition-duration: 0.15s;
  transition-timing-function: linear;
  font: inherit;
  color: inherit;
  text-transform: none;
  background-color: transparent;
  border: 0;
  margin: 0;
  overflow: visible;
}
.hamburger:hover {
  opacity: 0.7;
}
.hamburger.is-active:hover {
  opacity: 0.7;
}
.hamburger.is-active .hamburger-inner,
.hamburger.is-active .hamburger-inner::before,
.hamburger.is-active .hamburger-inner::after {
  background-color: #000;
}

.hamburger-box {
  width: 22px;
  height: 11px;
  display: inline-block;
  position: relative;
}

.hamburger-inner {
  display: block;
  top: 50%;
  margin-top: -0.5px;
}
.hamburger-inner, .hamburger-inner::before, .hamburger-inner::after {
  width: 22px;
  height: 1px;
  background-color: #000;
  border-radius: 4px;
  position: absolute;
  transition-property: transform;
  transition-duration: 0.15s;
  transition-timing-function: ease;
}
.hamburger-inner::before, .hamburger-inner::after {
  content: "";
  display: block;
}
.hamburger-inner::before {
  top: -5px;
}
.hamburger-inner::after {
  bottom: -5px;
}

/*
 * Arrow
 */
.hamburger--arrow.is-active .hamburger-inner::before {
  transform: translate3d(-4.4px, 0, 0) rotate(-45deg) scale(0.7, 1);
}
.hamburger--arrow.is-active .hamburger-inner::after {
  transform: translate3d(-4.4px, 0, 0) rotate(45deg) scale(0.7, 1);
}

/*
 * Collapse
 */
.hamburger--collapse .hamburger-inner {
  top: auto;
  bottom: 0;
  transition-duration: 0.13s;
  transition-delay: 0.13s;
  transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
}
.hamburger--collapse .hamburger-inner::after {
  top: -10px;
  transition: top 0.2s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), opacity 0.1s linear;
}
.hamburger--collapse .hamburger-inner::before {
  transition: top 0.12s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19);
}
.hamburger--collapse.is-active .hamburger-inner {
  transform: translate3d(0, -5px, 0) rotate(-45deg);
  transition-delay: 0.22s;
  transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
}
.hamburger--collapse.is-active .hamburger-inner::after {
  top: 0;
  opacity: 0;
  transition: top 0.2s cubic-bezier(0.33333, 0, 0.66667, 0.33333), opacity 0.1s 0.22s linear;
}
.hamburger--collapse.is-active .hamburger-inner::before {
  top: 0;
  transform: rotate(-90deg);
  transition: top 0.1s 0.16s cubic-bezier(0.33333, 0, 0.66667, 0.33333), transform 0.13s 0.25s cubic-bezier(0.215, 0.61, 0.355, 1);
}

/* ==========================================================================
   Main Structure
   ========================================================================== */
html {
  position: relative;
  min-height: 100%;
  font-size: 16px;
}

body {
  font-family: "EB Garamond";
  display: grid;
  grid-template-areas: "nav" "main" "footer";
  min-height: 100vh;
  color: #131516;
  font-size: 18px;
  overflow-x: hidden;
  position: static;
}

body:before {
  content: "";
  display: block;
  position: fixed;
  top: 0;
  height: 100vh;
  width: 100vw;
  z-index: 0;
  background-color: transparent;
  transition: background-color 0.2s ease-in-out;
}

/* Main nav menu
   ========================================================================== */
nav.navbar {
  grid-area: nav;
  position: fixed;
  height: 3.2rem;
  font-family: "Roboto";
  font-weight: 300;
  font-size: 1.25rem;
  background: #F8F8F8;
  display: flex;
  justify-content: center;
}
nav.navbar ul.nav > li {
  text-align: center;
  width: 8rem;
}

nav .hamburger {
  display: none;
}

nav.navbar::before,
nav.navbar::after {
  content: unset;
}

nav.navbar .logo {
  padding: 0 2rem;
  font-family: "EB Garamond";
  font-size: 2.441rem;
  font-weight: bold;
  margin-top: -0.31rem;
}

nav.navbar ul {
  display: flex;
  list-style: none;
  flex: 0 1 60rem;
  height: 100%;
  justify-content: space-between;
}

nav.navbar li {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  width: 100%;
  border-bottom: 0.2rem solid transparent;
  transition: border-bottom-color 0.25s ease-in-out;
}
nav.navbar li:not(.logo):hover {
  border-bottom-color: rgba(0, 128, 128, 0.3);
  transition: border-bottom-color 0.25s ease-in-out;
}

nav.navbar a {
  color: inherit;
  width: 100%;
  display: block;
  align-self: center;
  text-align: center;
  text-decoration: none;
}
nav.navbar a:hover, nav.navbar a :active, nav.navbar a :visited {
  text-decoration: none;
}

/*
 * Fixes the scroll margin to so that
 * they appear about half way down the page;
 * an alternative, if the anchors are meant to
 * be at the top of the page (but still visible
 * after the fixed header) would be to use the 
 * $nav-height variable instead.
 * 
 */
:not(aside) :target {
  scroll-margin-top: 25vh;
}

/* Main block
   ========================================================================== */
main {
  grid-area: main;
  margin-top: 3.2rem;
  position: relative;
  min-height: 100vh;
  display: flex;
  flex: 0 1 60rem;
  align-items: baseline;
  /* Mains with poem containers should be flexed */
}
main .poem-container {
  display: flex;
}

.container {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  flex: 0 1 60rem;
  margin: 0 auto;
  padding-left: 4vw;
  align-items: baseline;
  margin-bottom: 5rem;
}

/* 
 * Remove borders from page headers in object titles
 */
.object-title .page-header {
  border-bottom: none;
}

.page-header {
  width: 100%;
}

/* Aside menu (only used in poems)
   ========================================================================== */
aside {
  flex: 0 0 15rem;
  background: #F8F8F8;
  position: sticky;
  overflow-y: auto;
  /* 
   * Order is important here, since the aside comes
   * after the main poem block
   * 
   */
  order: 0;
  scroll-behavior: smooth;
  /* Height should be the entire page, except
   * for the navigation height */
  height: calc(100vh - 3.2rem);
  padding: 0.41rem 0;
  /* And the aside should start at the bottom
   * of the nav
   *  */
  top: 3.2rem;
  margin-right: 3.052rem;
  transition: transform 0.5s ease;
  /* All roboto font */
  font-family: "Roboto";
  /* Aside headings headings are lighter */
}
aside h1, aside h2, aside h3, aside h4, aside h5, aside h6 {
  font-weight: 300;
}
aside h4 {
  font-size: 1rem;
}
aside .aside-heading {
  display: flex;
  justify-content: space-around;
}
aside .aside-heading, aside h2, aside h3 {
  font-size: 1.25rem;
}

/* Footer
   ========================================================================== */
footer.footer {
  grid-area: footer;
  max-height: 20rem;
  background: #131516;
  z-index: 50;
  display: flex;
  flex: 0 1 60rem;
  font-family: "Roboto";
  list-style: none;
}
footer.footer a {
  color: white;
}
footer.footer .container {
  margin-top: 1.953rem;
  justify-content: space-between;
  margin-bottom: 1.25rem;
  align-items: flex-start;
}
footer.footer ul {
  list-style: none;
  columns: 2;
  margin-left: 0;
  padding-left: 0;
  font-size: 1.25rem;
}
footer.footer li {
  margin-left: 0;
  padding-left: 0;
  margin-bottom: 1rem;
}
footer.footer img {
  max-width: 100%;
  height: auto;
}
footer.footer img.dhilLogo {
  max-width: 75%;
}

#footer_links {
  margin-right: auto;
  max-width: 30%;
}

#footer_imgs {
  max-width: 50%;
}

section {
  width: 100%;
  margin-top: 1rem;
}

/* Headings
   ========================================================================== */
/* Quick SASS formula for creating heading scale */
h1 {
  font-size: 3.052rem;
}

h2 {
  font-size: 2.441rem;
}

h3 {
  font-size: 1.953rem;
}

h4 {
  font-size: 1.563rem;
}

h5 {
  font-size: 1.25rem;
}

h1 {
  margin-bottom: 3.052rem;
}
.poem h1 {
  margin-right: 3.052rem;
}

/* Bootstrap overrides
   ========================================================================== */
.row {
  width: 100%;
  min-height: 0;
}

#content nav {
  width: 100%;
}

.breadcrumb {
  background-color: white;
}

.page-header {
  margin-bottom: 0;
  margin-top: 1.953rem;
  padding-bottom: 0;
}

/* ==========================================================================
   Objects
   ========================================================================== */
.object .record-link, .object .references, .object h1 {
  display: none;
}

aside .object h1 {
  display: block;
  font-size: 1.25rem;
  margin-bottom: 0.41rem;
  max-width: 50%;
}
aside .object h1.long {
  font-size: 1.1875rem;
}
aside .object h2 {
  font-size: 1rem;
}

/* Object heading in poem
   ========================================================================== */
.object-header {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: baseline;
  margin-bottom: 0.64rem;
}

.toggles {
  display: none;
}
.toggles button {
  top: -1rem;
}

.js aside .toggles {
  display: block;
}

.objectCloser {
  display: none;
}

/* Object page
   ========================================================================== */
ul[data-template="app:object-usage"] {
  list-style: none;
}
ul[data-template="app:object-usage"] a {
  color: #131516;
  background: rgba(0, 128, 128, 0.3);
  pointer-events: none;
}
ul[data-template="app:object-usage"] a.linenum {
  background: none;
  margin-left: -1rem;
  margin-right: 1rem;
  opacity: 0.8;
}
ul[data-template="app:object-usage"] li {
  margin: 0.512rem 0;
}
ul[data-template="app:object-usage"] li:after {
  content: "...";
  padding-left: 0.2rem;
  opacity: 0.8;
  display: inline;
}

/* ==========================================================================
   Poem
   ========================================================================== */
.poem-container {
  margin-right: 1rem;
}

/** Main poem bit */
#poem {
  flex: 0 1 32.5rem;
  order: 1;
  /* This is the bit the does the poem
   * transition when the aside menu closes */
  transition: transform 0.42s ease;
  transform: translateX(0);
  margin-bottom: 15.26rem;
  margin-top: 1.563rem;
  margin-left: 4vw;
  /* Specific poem styles */
}
#poem .poem {
  /* Special link styles for 
   * gradient/rising link references */
  /* Epigraphs */
  /* Stanzas */
}
#poem .poem a {
  text-decoration: none;
  color: inherit;
  border-bottom: 0.1rem solid rgba(0, 128, 128, 0.3);
  /* Create a linear gradient that is 
   * transparent  */
  background: linear-gradient(0deg, rgba(0, 128, 128, 0.3) 0%, rgba(0, 128, 128, 0.3) 10%, rgba(255, 255, 255, 0) 10%, rgba(255, 255, 255, 0) 100%);
  /* But when it's selected or clicked (controlled
   * by gpi.js), make the gradient animate from
   * 0 to 100%. See _mixins.css for the linear gradient
   * animation
   *  */
}
#poem .poem a:hover, #poem .poem a:visited, #poem .poem a:active {
  color: inherit;
  text-decoration: none;
}
#poem .poem a.selected, #poem .poem a.clicked {
  background: linear-gradient(0deg, rgba(0, 128, 128, 0.3) 0%, rgba(0, 128, 128, 0.3) 100%);
  animation: background-up 0.2s linear;
}
#poem .poem a.deselected {
  animation: background-down 0.2s linear;
}
#poem .poem blockquote {
  font-size: 16px;
  margin: 1.563rem 3.052rem;
  max-width: 25rem;
  border: none;
}
#poem .poem blockquote p {
  margin: 0;
}
#poem .poem blockquote cite {
  margin-left: 3.052rem;
  display: block;
  font-style: italic;
}
#poem .poem blockquote footer {
  font-size: inherit;
}
#poem .poem ol {
  list-style-type: none;
  padding-left: 0;
}
#poem .poem ol + ol {
  margin-top: 1.25rem;
}
#poem .poem li {
  margin-left: 0;
  /* Hanging indent for small screen display
   * or very long lines */
  padding-left: 1.5rem;
  text-indent: -1.5rem;
}
#poem .poem li + li {
  margin-top: 0.21rem;
}
#poem .poem li:target .linenum {
  color: #008080;
  font-weight: bold;
}
#poem .poem .linenum {
  color: rgba(19, 21, 22, 0.5);
  padding-right: 1em;
  text-align: right;
  display: inline-block;
  background: none;
  border-bottom: none;
}
#poem .poem .linenum:hover {
  color: #008080 !important;
  transition: color 0.2s ease-in-out;
}

/* Poem aside
   ========================================================================== */
aside button.hamburger {
  display: none;
}

.js aside button.hamburger {
  display: block;
  margin-left: 10px;
}

/* 
 * When the aside is hidden, then move
 * the poem over $shift-left-width
 * and make the margin right the same as the amount it has shifted.
 * This basically makes it so that the poem itself is the same width
 * and the same margin as it was when the aside wasn't hidden.
 * 
 */
.aside-hidden #poem {
  transform: translateX(-10.5rem);
  margin-right: -10.5rem;
}

/* 
 * Make the aside a bit translucent when it's hidden
 */
aside > div,
aside > .aside-heading > h2 {
  opacity: 1;
  transition: opacity 0.42s ease;
}

/* 
 * If the aside isn't expanded, move it over a set amount
 * and make the overflow hidden.
 */
aside[aria-expanded=false] {
  transform: translateX(-10.5rem);
  overflow-y: hidden;
}

aside[aria-expanded=false] > div:not(.aside-heading),
aside[aria-expanded=false] > .aside-heading > h2 {
  opacity: 0.1;
}

aside > div {
  padding: 0.64rem;
}
aside > div:not(:first-of-type) {
  border-top: 0.086rem solid rgba(19, 21, 22, 0.4);
}

aside .object {
  font-size: 1rem;
}
aside .object .references, aside .object .record-link {
  display: block;
}
aside .object p {
  font-weight: 300;
  margin-top: 1rem;
}

/* ==========================================================================
   Basic Pages
   ========================================================================== */
table.poem-index td:first-of-type {
  max-width: 20rem;
}

/* Pagination nav
   ========================================================================== */
ul.pagination {
  font-family: "Roboto";
  font-size: 0.8rem;
}

/* Transformation errors
   ========================================================================== */
.tx-error {
  background-color: #fefedd;
  outline: 1px solid #f00;
  display: inline-block;
  padding: 3px;
}
.tx-error .node-name {
  font-weight: bold;
  display: inline-block;
  padding: 3px;
}

/* Search inputs
   ========================================================================== */
input[type=text] {
  font-size: 1.25rem;
}

/* Search results
   ========================================================================== */
span.hi {
  font-weight: bold;
  color: darkred;
}

span.target {
  color: #800080;
  cursor: pointer;
}

.referenced {
  font-weight: bolder;
}

p.signed {
  margin-left: 4em;
}

.searchHeader {
  border-bottom: none;
}

.searchResults {
  margin-top: 2.441rem;
}

/* Born-digital pages
   ========================================================================== */
section p {
  line-height: 1.6;
  margin-right: 5rem;
}
section figure {
  line-height: 1.6;
  margin-right: 5rem;
}
section figure figcaption {
  text-align: center;
  font-style: italic;
}
section pre {
  margin-right: 5rem;
}
section td, section th {
  padding: 7px;
}
section span.seg {
  color: red;
}
section span.ref {
  color: blue;
}

/* ==========================================================================
   Media queries
   ========================================================================== */
/*  < 769
   ========================================================================== */
@media (max-width: 768px) {
  /**
   * Create a modal using the pseudo on the body;
   * it has to be set at the very beginning to provide
   * nice transition effect
   */
  body.gpi-modal:before {
    z-index: 100;
    background-color: rgba(248, 248, 248, 0.9);
    backdrop-filter: blur(4px);
    transition: background-color 0.2s ease-in-out, backdrop-filter 0.2s ease-in-out;
  }

  #aside {
    /* Move the aside all the way over */
    transform: translateX(-15rem);
    display: flex;
    /* No longer sticky */
    position: fixed;
    height: 120vh;
    /* And highest z */
    z-index: 9000;
    top: -3.2rem;
    transition: background-color 0.2s ease-in-out;
  }

  #poem {
    transform: translateX(0) !important;
    margin-right: 1rem !important;
    transition: none !important;
  }
  #poem .poem {
    line-height: 1.6;
    transition: none !important;
    margin-left: 0.8rem;
  }

  .poem-index td:nth-of-type(n+3),
.poem-index th:nth-of-type(n+3) {
    display: none;
  }

  /* Force max opacity, even if it was closed
   * beforehand */
  #aside * {
    opacity: 1 !important;
  }

  /* Hide the aside */
  #aside > * {
    display: none;
  }

  #aside.gpi-modal {
    transform: translateX(0);
    min-width: 100vw;
    background-color: rgba(19, 21, 22, 0.3);
    transition: background-color 0.2s ease-in-out;
    align-content: center;
    justify-content: center;
    transition: none;
  }

  /* 
   * Create the object modal in mobile view
   * 
   */
  #aside.gpi-modal .object.active {
    display: block;
    border-top: none;
    min-width: 20rem;
    max-width: 35rem;
    align-self: center;
    justify-self: center;
    position: relative;
    top: -2rem;
    padding: 1rem 1.25rem;
    background-color: white;
    border-radius: 0.1rem;
    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
  }

  .refToggle {
    display: none !important;
  }

  /* Show the object closer */
  .objectCloser {
    display: block;
    background: none;
    border: none;
  }

  /* On hover, change the stroke colour (it's an
   * svg) */
  .objectCloser:hover * {
    stroke: rgba(0, 128, 128, 0.3);
  }

  /* Center the poem */
  .poem-container {
    margin: 0 auto;
    justify-content: center;
  }

  main > section {
    margin: 0 1rem;
  }

  section p {
    margin-right: 0;
  }

  /* 
   * The mobile navbar is a bit trickier;
   * what we do here is:
   * 
   * 1. Hide all of it, except the logo
   * 2. Move the logo (using the order property)
   *    to the top of the list
   * 3. Only show the first bit of the list
   * 4. But when the hamburger menu actives the nav,
   *    show the rest of the list and trigger the body
   *    modal.
   */
  nav.navbar {
    align-items: center;
    justify-content: space-between;
    overflow-y: visible;
  }
  nav.navbar ul {
    flex: 0 0 8rem;
    justify-content: flex-end;
    flex-direction: row;
    flex-wrap: wrap;
    margin-top: 0.5rem;
    height: 100%;
    margin-right: 1.25rem;
  }
  nav.navbar[aria-open=true] ul > li:not(.logo) {
    transform: translateX(0);
    transition: opacity 0.35s ease-in-out;
    opacity: 1;
  }
  nav.navbar ul > li.logo {
    justify-content: flex-end;
    margin-right: -0.25rem;
  }
  nav.navbar ul > li:not(.logo) {
    order: 1;
    position: relative;
    transform: translateX(20rem);
    background: #F8F8F8;
    width: 8rem;
    height: 4rem;
    opacity: 0;
  }
  nav.navbar .hamburger {
    display: block;
    margin-right: 3rem;
    align-self: flex-start;
    margin-top: -0.2rem;
  }
}
@keyframes background-up {
  0% {
    background: linear-gradient(0deg, rgba(0, 128, 128, 0.3) 0%, rgba(0, 128, 128, 0.3) 10%, rgba(0, 128, 128, 0.3) 0%, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0) 100%);
  }
  6.6666666667% {
    background: linear-gradient(0deg, rgba(0, 128, 128, 0.3) 0%, rgba(0, 128, 128, 0.3) 10%, rgba(0, 128, 128, 0.3) 6.6666666667%, rgba(255, 255, 255, 0) 6.6666666667%, rgba(255, 255, 255, 0) 100%);
  }
  13.3333333333% {
    background: linear-gradient(0deg, rgba(0, 128, 128, 0.3) 0%, rgba(0, 128, 128, 0.3) 10%, rgba(0, 128, 128, 0.3) 13.3333333333%, rgba(255, 255, 255, 0) 13.3333333333%, rgba(255, 255, 255, 0) 100%);
  }
  20% {
    background: linear-gradient(0deg, rgba(0, 128, 128, 0.3) 0%, rgba(0, 128, 128, 0.3) 10%, rgba(0, 128, 128, 0.3) 20%, rgba(255, 255, 255, 0) 20%, rgba(255, 255, 255, 0) 100%);
  }
  26.6666666667% {
    background: linear-gradient(0deg, rgba(0, 128, 128, 0.3) 0%, rgba(0, 128, 128, 0.3) 10%, rgba(0, 128, 128, 0.3) 26.6666666667%, rgba(255, 255, 255, 0) 26.6666666667%, rgba(255, 255, 255, 0) 100%);
  }
  33.3333333333% {
    background: linear-gradient(0deg, rgba(0, 128, 128, 0.3) 0%, rgba(0, 128, 128, 0.3) 10%, rgba(0, 128, 128, 0.3) 33.3333333333%, rgba(255, 255, 255, 0) 33.3333333333%, rgba(255, 255, 255, 0) 100%);
  }
  40% {
    background: linear-gradient(0deg, rgba(0, 128, 128, 0.3) 0%, rgba(0, 128, 128, 0.3) 10%, rgba(0, 128, 128, 0.3) 40%, rgba(255, 255, 255, 0) 40%, rgba(255, 255, 255, 0) 100%);
  }
  46.6666666667% {
    background: linear-gradient(0deg, rgba(0, 128, 128, 0.3) 0%, rgba(0, 128, 128, 0.3) 10%, rgba(0, 128, 128, 0.3) 46.6666666667%, rgba(255, 255, 255, 0) 46.6666666667%, rgba(255, 255, 255, 0) 100%);
  }
  53.3333333333% {
    background: linear-gradient(0deg, rgba(0, 128, 128, 0.3) 0%, rgba(0, 128, 128, 0.3) 10%, rgba(0, 128, 128, 0.3) 53.3333333333%, rgba(255, 255, 255, 0) 53.3333333333%, rgba(255, 255, 255, 0) 100%);
  }
  60% {
    background: linear-gradient(0deg, rgba(0, 128, 128, 0.3) 0%, rgba(0, 128, 128, 0.3) 10%, rgba(0, 128, 128, 0.3) 60%, rgba(255, 255, 255, 0) 60%, rgba(255, 255, 255, 0) 100%);
  }
  66.6666666667% {
    background: linear-gradient(0deg, rgba(0, 128, 128, 0.3) 0%, rgba(0, 128, 128, 0.3) 10%, rgba(0, 128, 128, 0.3) 66.6666666667%, rgba(255, 255, 255, 0) 66.6666666667%, rgba(255, 255, 255, 0) 100%);
  }
  73.3333333333% {
    background: linear-gradient(0deg, rgba(0, 128, 128, 0.3) 0%, rgba(0, 128, 128, 0.3) 10%, rgba(0, 128, 128, 0.3) 73.3333333333%, rgba(255, 255, 255, 0) 73.3333333333%, rgba(255, 255, 255, 0) 100%);
  }
  80% {
    background: linear-gradient(0deg, rgba(0, 128, 128, 0.3) 0%, rgba(0, 128, 128, 0.3) 10%, rgba(0, 128, 128, 0.3) 80%, rgba(255, 255, 255, 0) 80%, rgba(255, 255, 255, 0) 100%);
  }
  86.6666666667% {
    background: linear-gradient(0deg, rgba(0, 128, 128, 0.3) 0%, rgba(0, 128, 128, 0.3) 10%, rgba(0, 128, 128, 0.3) 86.6666666667%, rgba(255, 255, 255, 0) 86.6666666667%, rgba(255, 255, 255, 0) 100%);
  }
  93.3333333333% {
    background: linear-gradient(0deg, rgba(0, 128, 128, 0.3) 0%, rgba(0, 128, 128, 0.3) 10%, rgba(0, 128, 128, 0.3) 93.3333333333%, rgba(255, 255, 255, 0) 93.3333333333%, rgba(255, 255, 255, 0) 100%);
  }
  100% {
    background: linear-gradient(0deg, rgba(0, 128, 128, 0.3) 0%, rgba(0, 128, 128, 0.3) 10%, rgba(0, 128, 128, 0.3) 100%, rgba(255, 255, 255, 0) 100%, rgba(255, 255, 255, 0) 100%);
  }
}
@keyframes background-down {
  0% {
    background: linear-gradient(0deg, rgba(0, 128, 128, 0.3) 0%, rgba(0, 128, 128, 0.3) 10%, rgba(0, 128, 128, 0.3) 100%, rgba(255, 255, 255, 0) 100%, rgba(255, 255, 255, 0) 100%);
  }
  6.6666666667% {
    background: linear-gradient(0deg, rgba(0, 128, 128, 0.3) 0%, rgba(0, 128, 128, 0.3) 10%, rgba(0, 128, 128, 0.3) 93.3333333333%, rgba(255, 255, 255, 0) 93.3333333333%, rgba(255, 255, 255, 0) 100%);
  }
  13.3333333333% {
    background: linear-gradient(0deg, rgba(0, 128, 128, 0.3) 0%, rgba(0, 128, 128, 0.3) 10%, rgba(0, 128, 128, 0.3) 86.6666666667%, rgba(255, 255, 255, 0) 86.6666666667%, rgba(255, 255, 255, 0) 100%);
  }
  20% {
    background: linear-gradient(0deg, rgba(0, 128, 128, 0.3) 0%, rgba(0, 128, 128, 0.3) 10%, rgba(0, 128, 128, 0.3) 80%, rgba(255, 255, 255, 0) 80%, rgba(255, 255, 255, 0) 100%);
  }
  26.6666666667% {
    background: linear-gradient(0deg, rgba(0, 128, 128, 0.3) 0%, rgba(0, 128, 128, 0.3) 10%, rgba(0, 128, 128, 0.3) 73.3333333333%, rgba(255, 255, 255, 0) 73.3333333333%, rgba(255, 255, 255, 0) 100%);
  }
  33.3333333333% {
    background: linear-gradient(0deg, rgba(0, 128, 128, 0.3) 0%, rgba(0, 128, 128, 0.3) 10%, rgba(0, 128, 128, 0.3) 66.6666666667%, rgba(255, 255, 255, 0) 66.6666666667%, rgba(255, 255, 255, 0) 100%);
  }
  40% {
    background: linear-gradient(0deg, rgba(0, 128, 128, 0.3) 0%, rgba(0, 128, 128, 0.3) 10%, rgba(0, 128, 128, 0.3) 60%, rgba(255, 255, 255, 0) 60%, rgba(255, 255, 255, 0) 100%);
  }
  46.6666666667% {
    background: linear-gradient(0deg, rgba(0, 128, 128, 0.3) 0%, rgba(0, 128, 128, 0.3) 10%, rgba(0, 128, 128, 0.3) 53.3333333333%, rgba(255, 255, 255, 0) 53.3333333333%, rgba(255, 255, 255, 0) 100%);
  }
  53.3333333333% {
    background: linear-gradient(0deg, rgba(0, 128, 128, 0.3) 0%, rgba(0, 128, 128, 0.3) 10%, rgba(0, 128, 128, 0.3) 46.6666666667%, rgba(255, 255, 255, 0) 46.6666666667%, rgba(255, 255, 255, 0) 100%);
  }
  60% {
    background: linear-gradient(0deg, rgba(0, 128, 128, 0.3) 0%, rgba(0, 128, 128, 0.3) 10%, rgba(0, 128, 128, 0.3) 40%, rgba(255, 255, 255, 0) 40%, rgba(255, 255, 255, 0) 100%);
  }
  66.6666666667% {
    background: linear-gradient(0deg, rgba(0, 128, 128, 0.3) 0%, rgba(0, 128, 128, 0.3) 10%, rgba(0, 128, 128, 0.3) 33.3333333333%, rgba(255, 255, 255, 0) 33.3333333333%, rgba(255, 255, 255, 0) 100%);
  }
  73.3333333333% {
    background: linear-gradient(0deg, rgba(0, 128, 128, 0.3) 0%, rgba(0, 128, 128, 0.3) 10%, rgba(0, 128, 128, 0.3) 26.6666666667%, rgba(255, 255, 255, 0) 26.6666666667%, rgba(255, 255, 255, 0) 100%);
  }
  80% {
    background: linear-gradient(0deg, rgba(0, 128, 128, 0.3) 0%, rgba(0, 128, 128, 0.3) 10%, rgba(0, 128, 128, 0.3) 20%, rgba(255, 255, 255, 0) 20%, rgba(255, 255, 255, 0) 100%);
  }
  86.6666666667% {
    background: linear-gradient(0deg, rgba(0, 128, 128, 0.3) 0%, rgba(0, 128, 128, 0.3) 10%, rgba(0, 128, 128, 0.3) 13.3333333333%, rgba(255, 255, 255, 0) 13.3333333333%, rgba(255, 255, 255, 0) 100%);
  }
  93.3333333333% {
    background: linear-gradient(0deg, rgba(0, 128, 128, 0.3) 0%, rgba(0, 128, 128, 0.3) 10%, rgba(0, 128, 128, 0.3) 6.6666666667%, rgba(255, 255, 255, 0) 6.6666666667%, rgba(255, 255, 255, 0) 100%);
  }
  100% {
    background: linear-gradient(0deg, rgba(0, 128, 128, 0.3) 0%, rgba(0, 128, 128, 0.3) 10%, rgba(0, 128, 128, 0.3) 0%, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0) 100%);
  }
}

/*# sourceMappingURL=style.css.map */
